{"version":3,"sources":["./src/app/file-upload/file-upload-routing.module.ts","./src/app/file-upload/file-upload.component.ts","./src/app/file-upload/file-upload.component.html","./node_modules/angular-file-uploader/__ivy_ngcc__/fesm2015/angular-file-uploader.js","./src/app/file-upload/file-upload.module.ts"],"names":[],"mappings":"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AACzB,IAAI,wDAAiB,qFAAqF,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,mCAAmC,EAAE;AACnN,IAAI,oDAAa;AACjB,IAAI,uDAAgB;AACpB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,iGAAiG,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,iCAAiC,EAAE;AAC7N,IAAI,0DAAmB;AACvB,IAAI,uDAAgB;AACpB,IAAI,0DAAmB;AACvB,IAAI,oDAAa;AACjB,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,uDAAgB;AACpB,IAAI,gEAAyB;AAC7B,IAAI,uDAAgB;AACpB,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,oEAA6B;AACjC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,0DAA0D;AACzI;AACA;AACA,+BAA+B,kEAAa;AAC5C,6CAA6C;AAC7C;AACA;AACA;AACA,oCAAoC,kEAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,gDAAgD,+DAAwB,CAAC,+DAAiB,MAAM;AACtL,oCAAoC,+DAAwB,EAAE,sFAAsF,+CAA+C,YAAY,+DAA+D,aAAa,kEAA2B,2rEAA2rE;AACj/E,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,oDAAW,EAAE,uDAAc,EAAE,uDAAc,EAAE,uDAAc,kDAAkD,kBAAkB,gBAAgB,4BAA4B,gBAAgB,UAAU,4BAA4B,iBAAiB,iCAAiC,gBAAgB,gBAAgB,uBAAuB,mBAAmB,2BAA2B,6BAA6B,yBAAyB,mBAAmB,WAAW,gCAAgC,cAAc,qBAAqB,yDAAyD,0BAA0B,mBAAmB,YAAY,YAAY,gFAAgF,cAAc,gBAAgB,iBAAiB,kBAAkB,oCAAoC,oBAAoB,oCAAoC,4BAA4B,WAAW,oCAAoC,0BAA0B,WAAW,oCAAoC,uDAAuD,gBAAgB,6BAA6B,gBAAgB,IAAI;AAC5pC;AACA,KAAK,OAAO,+DAAU,gBAAgB,OAAO,sDAAQ,EAAE;AACvD;AACA;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,sVAAsV,sKAAsK,4BAA4B,yFAAyF,IAAI,KAAK,uBAAuB,kGAAkG,IAAI,qFAAqF,6BAA6B,6CAA6C,IAAI,qUAAqU,wBAAwB,wGAAwG,gBAAgB,IAAI,yBAAyB,IAAI,wBAAwB,gHAAgH,wFAAwF,SAAS,kEAAkE,sBAAsB,gBAAgB,MAAM,MAAM,MAAM,MAAM,kZAAkZ,0BAA0B,KAAK,eAAe,oSAAoS,iEAAiE,gBAAgB,kEAAkE,gBAAgB,+CAA+C,gBAAgB,4HAA4H,mGAAmG,gBAAgB,yBAAyB,eAAe,+QAA+Q,0BAA0B,KAAK,eAAe,wNAAwN,yBAAyB,sPAAsP,2GAA2G,4BAA4B,+GAA+G,gBAAgB,gBAAgB,wBAAwB,iDAAiD,IAAI,sNAAsN,8DAA8D,IAAI,KAAK,uBAAuB;AACj5I,4CAA4C,kBAAkB,gBAAgB,SAAS,gBAAgB,UAAU,SAAS,iBAAiB,cAAc,gBAAgB,gBAAgB,uBAAuB,mBAAmB,QAAQ,6BAA6B,yBAAyB,mBAAmB,WAAW,aAAa,cAAc,qBAAqB,iBAAiB,0BAA0B,mBAAmB,YAAY,YAAY,mBAAmB,cAAc,gBAAgB,iBAAiB,kBAAkB,iBAAiB,oBAAoB,oCAAoC,SAAS,WAAW,oCAAoC,OAAO,WAAW,oCAAoC,gBAAgB,gBAAgB,UAAU,gBAAgB;AAC1wB,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,+DAAiB;AACvD,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,gFAAgF,+CAA+C;AAC/H,iCAAiC,8DAAuB,EAAE,kCAAkC;AAC5F,iCAAiC,8DAAuB,EAAE;AAC1D,YAAY,4DAAY;AACxB,YAAY,qEAAgB;AAC5B,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,6BAA6B,4BAA4B,uCAAuC,EAAE,wBAAwB,SAAS,4DAAY;AAC1O,QAAQ,qEAAgB,EAAE,EAAE,wBAAwB,uCAAuC,EAAE,EAAE,EAAE,EAAE;AACnG,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,qEAAgB;AACpC;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEmE;;AAEnE,iD;;;;;;;;;;;;AC5iBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAGe;AACS;AACL;AACV;AACD;AACF;AACM;;AA2BpD,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGArBlB;YACP,4DAAY;YACZ,mFAAuB;YACvB,+EAAyB;YACzB,qEAAgB;YAChB,wEAAe;YACf,oEAAa;YACb,kEAAmB;YAEnB,gBAAgB;YAChB,kBAAkB;YAClB,eAAe;YACf,gCAAgC;SAEjC,EAGC,+EAAyB;mIAIhB,gBAAgB,mBAvBzB,0EAAmB,aAGnB,4DAAY;QACZ,mFAAuB;QACvB,+EAAyB;QACzB,qEAAgB;QAChB,wEAAe;QACf,oEAAa;QACb,kEAAmB;QAEnB,gBAAgB;QAChB,kBAAkB;QAClB,eAAe;QACf,gCAAgC;iBAIhC,0EAAmB;QACnB,+EAAyB","file":"file-upload-file-upload-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FileUploadComponent } from './file-upload.component';\n\nconst routes: Routes = [\n\n  {\n    path:'',\n    pathMatch: 'full',\n    component: FileUploadComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FileUploadRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css']\n})\nexport class FileUploadComponent implements OnInit {\n  fileUploadForm;\n  constructor(\n    private fb : FormBuilder,\n    private http : HttpClient\n    ) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n\n  }\n\n  onFileChange(event) {\n\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.fileUploadForm.patchValue({\n        fileSource: file\n      });\n    }\n  }\n  get f(){\n    return this.fileUploadForm.controls;\n  }\n\n  initializeForm():void{\n    this.fileUploadForm = this.fb.group({\n      fileName : ['',[Validators.required,Validators.maxLength(20)]],\n      serverName : ['', [Validators.required,Validators.maxLength(20)]],\n      file : ['', [Validators.required]],\n      fileSource : ['', [Validators.required]]\n    },\n    {\n     updateOn : 'change'\n    });\n  }\n  submitForm(): void{\n    console.log(this.fileUploadForm.value);\n    /**\n     * TODO:\n     * Upload file to server\n     * Send input fileName and serverName\n     * Send file size.\n     * Send date of making the request.\n     */\n    const formData = new FormData();\n    formData.append('file', this.fileUploadForm.get('fileSource').value);\n\n    this.http.post('/log/upload', formData)\n      .subscribe(res => {\n        console.log(res);\n        alert('Uploaded Successfully.');\n      })\n  }\n}\n","<div fxFlex =\"100\" fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\" fxLayoutGap=\"10px\" class=\"file-upload-container\">\n  <div class=\"title-container\">\n    <h3>Title Container Here!</h3>\n  </div>\n\n  <div class=\"main-container\" fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n    <div class=\"whole-form\">\n      <mat-card class=\"forms-mat-card\">\n        <div class=\"form-title\">\n          <p class=\"form-title-text\"> Please fill in the form...</p>\n        </div>\n        <div class=\"form-body\">\n          <form [formGroup]=\"fileUploadForm\" (ngSubmit)=\"submitForm()\">\n            <div class=\"file-name-input\">\n              <label for=\"fileName\">File Name </label>\n              <fieldset>\n                <input id=\"fileName\" name=\"fileName\" formControlName=\"fileName\" type=\"text\">\n                <div\n                  *ngIf=\"!fileUploadForm.controls['fileName']?.valid && (fileUploadForm.controls['fileName']?.dirty ||fileUploadForm.controls['fileName']?.touched)\">\n                  <div [hidden]=\"!fileUploadForm.controls['fileName'].errors?.required\">\n                    File Name is required!\n                  </div>\n                  <div [hidden]=\"!fileUploadForm.controls['fileName'].errors?.maxlength\">\n                    Max name length is 20 characters!\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"server-name-input\">\n              <label for=\"serverName\">Server Name </label>\n              <fieldset>\n                <input id=\"serverName\" name=\"serverName\" formControlName=\"serverName\" type=\"text\">\n                <div\n                  *ngIf=\"!fileUploadForm.controls['serverName']?.valid && (fileUploadForm.controls['serverName']?.dirty ||fileUploadForm.controls['serverName']?.touched)\">\n                  <div [hidden]=\"!fileUploadForm.controls['serverName'].errors?.required\">\n                    Server Name is required!\n                  </div>\n                  <div [hidden]=\"!fileUploadForm.controls['serverName'].errors?.maxlength\">\n                    Max name length is 20 characters!\n                  </div>\n                </div>\n              </fieldset>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"file\">File</label>\n              <input\n                  formControlName=\"file\"\n                  id=\"file\"\n                  type=\"file\"\n                  class=\"form-control\"\n                  (change)=\"onFileChange($event)\">\n                  <div *ngIf=\"fileUploadForm.controls['file'].touched && fileUploadForm.controls['file'].invalid\" class=\"alert alert-danger\">\n                  <div *ngIf=\"fileUploadForm.controls['file'].errors.required\">File is required.</div>\n              </div>\n          </div>\n\n\n            <div class=\"submit-button\">\n              <button mat-button type=\"submit\" [disabled]=\"!fileUploadForm.valid\">Submit! </button>\n            </div>\n          </form>\n\n\n        </div>\n      </mat-card>\n\n    </div>\n  </div>\n  <div class=\"bottom-container\">\n    <h3>Bottom Container Here!</h3>\n  </div>\n\n</div>\n\n\n","import { EventEmitter, Component, SkipSelf, Input, Output, NgModule } from '@angular/core';\nimport { HttpEventType, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction AngularFileUploaderComponent_div_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 15);\n    ɵngcc0.ɵɵlistener(\"drop\", function AngularFileUploaderComponent_div_0_div_1_Template_div_drop_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.drop($event); })(\"dragover\", function AngularFileUploaderComponent_div_0_div_1_Template_div_dragover_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.allowDrop($event); });\n    ɵngcc0.ɵɵelementStart(3, \"p\", 16);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.hideSelectBtn && ctx_r2.hideResetBtn ? null : \"dragNDropBtmPad\");\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.replaceTexts == null ? null : ctx_r2.replaceTexts.dragNDropBox);\n} }\nfunction AngularFileUploaderComponent_div_0_label_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 17);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"for\", \"sel\", ctx_r3.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.replaceTexts == null ? null : ctx_r3.replaceTexts.selectFileBtn);\n} }\nfunction AngularFileUploaderComponent_div_0_input_3_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_0_input_3_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(2); return ctx_r14.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r4.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r4.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r4.multiple ? \"\" : null);\n} }\nfunction AngularFileUploaderComponent_div_0_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(2); return ctx_r16.resetFileUpload(); });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.replaceTexts == null ? null : ctx_r5.replaceTexts.resetBtn);\n} }\nfunction AngularFileUploaderComponent_div_0_br_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"br\");\n} }\nconst _c0 = function (a0) { return { \"width\": a0 }; };\nfunction AngularFileUploaderComponent_div_0_div_8_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 27);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r20.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r20.uploadPercent, \"%\");\n} }\nfunction AngularFileUploaderComponent_div_0_div_8_a_9_Template(rf, ctx) { if (rf & 1) {\n    const _r24 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 28);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_8_a_9_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); const i_r19 = ɵngcc0.ɵɵnextContext().index; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.removeFile(i_r19, \"sf\"); });\n    ɵngcc0.ɵɵelement(1, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AngularFileUploaderComponent_div_0_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 22);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \"\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_div_8_Template, 3, 4, \"div\", 24);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_8_a_9_Template, 2, 0, \"a\", 25);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const sf_r18 = ctx.$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(sf_r18.name);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", ctx_r7.convertSize(sf_r18.size), \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isAllowedFileSingle && ctx_r7.progressBarShow && !ctx_r7.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.uploadStarted);\n} }\nfunction AngularFileUploaderComponent_div_0_div_9_a_9_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_div_9_a_9_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const j_r26 = ɵngcc0.ɵɵnextContext().index; const ctx_r28 = ɵngcc0.ɵɵnextContext(2); return ctx_r28.removeFile(j_r26, \"na\"); });\n    ɵngcc0.ɵɵtext(1, \"\\u00A0\");\n    ɵngcc0.ɵɵelement(2, \"i\", 29);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AngularFileUploaderComponent_div_0_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 30);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 21);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"p\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"strong\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"p\", 31);\n    ɵngcc0.ɵɵtext(8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_a_9_Template, 3, 0, \"a\", 32);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const na_r25 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(na_r25[\"fileName\"]);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", na_r25[\"fileSize\"], \")\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(na_r25[\"errorMsg\"]);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r8.uploadStarted);\n} }\nfunction AngularFileUploaderComponent_div_0_p_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"\", ctx_r9.uploadMsgClass, \" + afu-upload-status\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r9.uploadMsgText);\n} }\nfunction AngularFileUploaderComponent_div_0_div_12_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 34);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 27);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"br\");\n    ɵngcc0.ɵɵelement(5, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r10.uploadPercent + \"%\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", ctx_r10.uploadPercent, \"%\");\n} }\nfunction AngularFileUploaderComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r32 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_0_div_1_Template, 5, 2, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, AngularFileUploaderComponent_div_0_label_2_Template, 2, 2, \"label\", 4);\n    ɵngcc0.ɵɵtemplate(3, AngularFileUploaderComponent_div_0_input_3_Template, 1, 3, \"input\", 5);\n    ɵngcc0.ɵɵtemplate(4, AngularFileUploaderComponent_div_0_button_4_Template, 2, 1, \"button\", 6);\n    ɵngcc0.ɵɵtemplate(5, AngularFileUploaderComponent_div_0_br_5_Template, 1, 0, \"br\", 7);\n    ɵngcc0.ɵɵelementStart(6, \"p\", 8);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(8, AngularFileUploaderComponent_div_0_div_8_Template, 10, 4, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(9, AngularFileUploaderComponent_div_0_div_9_Template, 10, 4, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(10, AngularFileUploaderComponent_div_0_p_10_Template, 2, 4, \"p\", 11);\n    ɵngcc0.ɵɵelement(11, \"p\");\n    ɵngcc0.ɵɵtemplate(12, AngularFileUploaderComponent_div_0_div_12_Template, 6, 4, \"div\", 7);\n    ɵngcc0.ɵɵelementStart(13, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_0_Template_button_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.uploadFiles(); });\n    ɵngcc0.ɵɵtext(14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(15, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.theme == \"dragNDrop\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideResetBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.hideSelectBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate3(\"(\", ctx_r0.formatsAllowed, \") \", ctx_r0.replaceTexts == null ? null : ctx_r0.replaceTexts.sizeLimit, \": \", ctx_r0.convertSize(ctx_r0.maxSize), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.allowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.notAllowedFiles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.uploadMsg);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.isAllowedFileSingle && ctx_r0.progressBarShow && !ctx_r0.hideProgressBar);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r0.enableUploadBtn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.replaceTexts == null ? null : ctx_r0.replaceTexts.uploadBtn);\n} }\nfunction AngularFileUploaderComponent_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r34 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 35);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 36);\n    ɵngcc0.ɵɵelementStart(2, \"a\", 37);\n    ɵngcc0.ɵɵlistener(\"click\", function AngularFileUploaderComponent_div_1_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.attachpinOnclick(); });\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelement(4, \"i\", 38);\n    ɵngcc0.ɵɵelementStart(5, \"input\", 18);\n    ɵngcc0.ɵɵlistener(\"change\", function AngularFileUploaderComponent_div_1_Template_input_change_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.onChange($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"br\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(7, \" \\u00A0 \");\n    ɵngcc0.ɵɵelementStart(8, \"span\", 39);\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.replaceTexts == null ? null : ctx_r1.replaceTexts.attachPinBtn, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"sel\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵproperty(\"accept\", ctx_r1.formatsAllowed);\n    ɵngcc0.ɵɵattribute(\"multiple\", ctx_r1.multiple ? \"\" : null);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"upload-file-info\", ctx_r1.id, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.allowedFiles[0] == null ? null : ctx_r1.allowedFiles[0].name);\n} }\nclass AngularFileUploaderComponent {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.resetUpload = false;\r\n        // Outputs\r\n        this.ApiResponse = new EventEmitter();\r\n        this.everythingDone = new EventEmitter();\r\n        this.allowedFiles = [];\r\n        this.notAllowedFiles = [];\r\n        this.Caption = [];\r\n        this.isAllowedFileSingle = true;\r\n        this.progressBarShow = false;\r\n        this.enableUploadBtn = false;\r\n        this.uploadMsg = false;\r\n        this.afterUpload = false;\r\n        this.uploadStarted = false;\r\n        this.currentUploads = [];\r\n        this.fileNameIndex = true;\r\n        this.idDate = +new Date();\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Track changes in Configuration and see if user has even provided Configuration.\r\n        if (changes.config && this.config) {\r\n            // Assign User Configurations to Library Properties.\r\n            this.theme = this.config.theme || '';\r\n            this.id =\r\n                this.config.id ||\r\n                    parseInt((this.idDate / 10000).toString().split('.')[1], 10) +\r\n                        Math.floor(Math.random() * 20) * 10000;\r\n            this.hideProgressBar = this.config.hideProgressBar || false;\r\n            this.hideResetBtn = this.config.hideResetBtn || false;\r\n            this.hideSelectBtn = this.config.hideSelectBtn || false;\r\n            this.maxSize = (this.config.maxSize || 20) * 1024000; // mb to bytes.\r\n            this.uploadAPI = this.config.uploadAPI.url;\r\n            this.method = this.config.uploadAPI.method || 'POST';\r\n            this.formatsAllowed =\r\n                this.config.formatsAllowed || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\r\n            this.multiple = this.config.multiple || false;\r\n            this.headers = this.config.uploadAPI.headers || {};\r\n            this.params = this.config.uploadAPI.params || {};\r\n            this.responseType = this.config.uploadAPI.responseType || null;\r\n            this.fileNameIndex = this.config.fileNameIndex === false ? false : true;\r\n            this.replaceTexts = {\r\n                selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\r\n                resetBtn: 'Reset',\r\n                uploadBtn: 'Upload',\r\n                dragNDropBox: 'Drag N Drop',\r\n                attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\r\n                afterUploadMsg_success: 'Successfully Uploaded !',\r\n                afterUploadMsg_error: 'Upload Failed !',\r\n                sizeLimit: 'Size Limit',\r\n            }; // default replaceText.\r\n            if (this.config.replaceTexts) {\r\n                // updated replaceText if user has provided any.\r\n                this.replaceTexts = Object.assign(Object.assign({}, this.replaceTexts), this.config.replaceTexts);\r\n            }\r\n        }\r\n        // Reset when resetUpload value changes from false to true.\r\n        if (changes.resetUpload) {\r\n            if (changes.resetUpload.currentValue === true) {\r\n                this.resetFileUpload();\r\n            }\r\n        }\r\n    }\r\n    // Reset following properties.\r\n    resetFileUpload() {\r\n        this.allowedFiles = [];\r\n        this.Caption = [];\r\n        this.notAllowedFiles = [];\r\n        this.uploadMsg = false;\r\n        this.enableUploadBtn = false;\r\n    }\r\n    // When user selects files.\r\n    onChange(event) {\r\n        this.notAllowedFiles = [];\r\n        const fileExtRegExp = /(?:\\.([^.]+))?$/;\r\n        let fileList;\r\n        if (this.afterUpload || !this.multiple) {\r\n            this.allowedFiles = [];\r\n            this.Caption = [];\r\n            this.afterUpload = false;\r\n        }\r\n        if (event.type === 'drop') {\r\n            fileList = event.dataTransfer.files;\r\n        }\r\n        else {\r\n            fileList = event.target.files || event.srcElement.files;\r\n        }\r\n        // 'forEach' does not exist on 'filelist' that's why this good old 'for' is used.\r\n        for (let i = 0; i < fileList.length; i++) {\r\n            const currentFileExt = fileExtRegExp\r\n                .exec(fileList[i].name)[1]\r\n                .toLowerCase(); // Get file extension.\r\n            const isFormatValid = this.formatsAllowed.includes(currentFileExt);\r\n            const isSizeValid = fileList[i].size <= this.maxSize;\r\n            // Check whether current file format and size is correct as specified in the configurations.\r\n            if (isFormatValid && isSizeValid) {\r\n                this.allowedFiles.push(fileList[i]);\r\n            }\r\n            else {\r\n                this.notAllowedFiles.push({\r\n                    fileName: fileList[i].name,\r\n                    fileSize: this.convertSize(fileList[i].size),\r\n                    errorMsg: !isFormatValid ? 'Invalid format' : 'Invalid size',\r\n                });\r\n            }\r\n        }\r\n        // If there's any allowedFiles.\r\n        if (this.allowedFiles.length > 0) {\r\n            this.enableUploadBtn = true;\r\n            // Upload the files directly if theme is attach pin (as upload btn is not there for this theme).\r\n            if (this.theme === 'attachPin') {\r\n                this.uploadFiles();\r\n            }\r\n        }\r\n        else {\r\n            this.enableUploadBtn = false;\r\n        }\r\n        this.uploadMsg = false;\r\n        this.uploadStarted = false;\r\n        this.uploadPercent = 0;\r\n        event.target.value = null;\r\n    }\r\n    uploadFiles() {\r\n        this.progressBarShow = true;\r\n        this.uploadStarted = true;\r\n        this.notAllowedFiles = [];\r\n        let isError = false;\r\n        this.isAllowedFileSingle = this.allowedFiles.length <= 1;\r\n        const formData = new FormData();\r\n        // Add data to be sent in this request\r\n        this.allowedFiles.forEach((file, i) => {\r\n            formData.append(this.Caption[i] || 'file' + (this.fileNameIndex ? i : ''), this.allowedFiles[i]);\r\n        });\r\n        /*\r\n        Not Working, Headers null\r\n        // Contruct Headers\r\n        const headers = new HttpHeaders();\r\n        for (const key of Object.keys(this.headers)) {\r\n          headers.append(key, this.headers[key]);\r\n        }\r\n    \r\n        // Contruct Params\r\n        const params = new HttpParams();\r\n        for (const key of Object.keys(this.params)) {\r\n          params.append(key, this.params[key]);\r\n        } */\r\n        const options = {\r\n            headers: this.headers,\r\n            params: this.params,\r\n        };\r\n        if (this.responseType)\r\n            options.responseType = this.responseType;\r\n        this.http\r\n            .request(this.method.toUpperCase(), this.uploadAPI, Object.assign({ body: formData, reportProgress: true, observe: 'events' }, options))\r\n            .subscribe((event) => {\r\n            // Upload Progress\r\n            if (event.type === HttpEventType.UploadProgress) {\r\n                this.enableUploadBtn = false; // button should be disabled if process uploading\r\n                const currentDone = event.loaded / event.total;\r\n                this.uploadPercent = Math.round((event.loaded / event.total) * 100);\r\n            }\r\n            else if (event.type === HttpEventType.Response) {\r\n                if (event.status === 200 || event.status === 201) {\r\n                    // Success\r\n                    this.progressBarShow = false;\r\n                    this.enableUploadBtn = false;\r\n                    this.uploadMsg = true;\r\n                    this.afterUpload = true;\r\n                    if (!isError) {\r\n                        this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\r\n                        this.uploadMsgClass = 'text-success lead';\r\n                    }\r\n                }\r\n                else {\r\n                    // Failure\r\n                    isError = true;\r\n                    this.handleErrors();\r\n                }\r\n                this.ApiResponse.emit(event);\r\n            }\r\n            else {\r\n                //console.log('Event Other: ', event);\r\n            }\r\n        }, (error) => {\r\n            // Failure\r\n            isError = true;\r\n            this.handleErrors();\r\n            this.ApiResponse.emit(error);\r\n        });\r\n    }\r\n    handleErrors() {\r\n        this.progressBarShow = false;\r\n        this.enableUploadBtn = false;\r\n        this.uploadMsg = true;\r\n        this.afterUpload = true;\r\n        this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\r\n        this.uploadMsgClass = 'text-danger lead';\r\n    }\r\n    removeFile(i, sf_na) {\r\n        if (sf_na === 'sf') {\r\n            this.allowedFiles.splice(i, 1);\r\n            this.Caption.splice(i, 1);\r\n        }\r\n        else {\r\n            this.notAllowedFiles.splice(i, 1);\r\n        }\r\n        if (this.allowedFiles.length === 0) {\r\n            this.enableUploadBtn = false;\r\n        }\r\n    }\r\n    convertSize(fileSize) {\r\n        return fileSize < 1024000\r\n            ? (fileSize / 1024).toFixed(2) + ' KB'\r\n            : (fileSize / 1024000).toFixed(2) + ' MB';\r\n    }\r\n    attachpinOnclick() {\r\n        const element = document.getElementById('sel' + this.id);\r\n        if (element !== null) {\r\n            element.click();\r\n        }\r\n    }\r\n    drop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.onChange(event);\r\n    }\r\n    allowDrop(event) {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'copy';\r\n    }\r\n}\nAngularFileUploaderComponent.ɵfac = function AngularFileUploaderComponent_Factory(t) { return new (t || AngularFileUploaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.HttpClient, 4)); };\nAngularFileUploaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AngularFileUploaderComponent, selectors: [[\"angular-file-uploader\"]], inputs: { resetUpload: \"resetUpload\", config: \"config\" }, outputs: { ApiResponse: \"ApiResponse\", everythingDone: \"everythingDone\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"class\", \"container\", \"id\", \"default\", 4, \"ngIf\"], [\"id\", \"attachPin\", 4, \"ngIf\"], [\"id\", \"default\", 1, \"container\"], [\"id\", \"dragNDrop\", \"class\", \"dragNDrop\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"btn btn-primary btn-sm afu-select-btn\", 3, \"for\", 4, \"ngIf\"], [\"type\", \"file\", \"style\", \"display: none\", \"title\", \"Select file\", \"name\", \"files[]\", 3, \"id\", \"accept\", \"change\", 4, \"ngIf\"], [\"class\", \"btn btn-info btn-sm resetBtn afu-reset-btn\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"constraints-info\", \"afu-constraints-info\"], [\"class\", \"row afu-valid-file\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row text-danger afu-invalid-file\", 4, \"ngFor\", \"ngForOf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"afu-upload-btn\", 3, \"disabled\", \"click\"], [\"id\", \"dragNDrop\", 1, \"dragNDrop\", 3, \"ngClass\"], [2, \"position\", \"relative\"], [\"id\", \"div1\", 1, \"div1\", \"afu-dragndrop-box\", 3, \"drop\", \"dragover\"], [1, \"afu-dragndrop-text\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", \"afu-select-btn\", 3, \"for\"], [\"type\", \"file\", \"title\", \"Select file\", \"name\", \"files[]\", 2, \"display\", \"none\", 3, \"id\", \"accept\", \"change\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"resetBtn\", \"afu-reset-btn\", 3, \"click\"], [1, \"row\", \"afu-valid-file\"], [1, \"col-xs-3\", \"textOverflow\"], [1, \"text-primary\"], [1, \"col-xs-3\", \"padMarg\", \"sizeC\"], [\"class\", \"progress col-xs-3 padMarg afu-progress-bar\", 4, \"ngIf\"], [\"class\", \"col-xs-1\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"progress\", \"col-xs-3\", \"padMarg\", \"afu-progress-bar\"], [\"role\", \"progressbar\", 1, \"progress-bar\", \"progress-bar-success\", 3, \"ngStyle\"], [\"role\", \"button\", 1, \"col-xs-1\", 3, \"click\"], [1, \"fa\", \"fa-times\"], [1, \"row\", \"text-danger\", \"afu-invalid-file\"], [1, \"col-xs-3\"], [\"class\", \"col-xs-1 delFileIcon\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"button\", 1, \"col-xs-1\", \"delFileIcon\", 3, \"click\"], [1, \"progress\", \"col-xs-4\", \"padMarg\", \"afu-progress-bar\"], [\"id\", \"attachPin\"], [2, \"position\", \"relative\", \"padding-left\", \"6px\"], [1, \"btn\", \"up_btn\", \"afu-attach-pin\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-paperclip\"], [1, \"label\", \"label-info\", 3, \"id\"]], template: function AngularFileUploaderComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, AngularFileUploaderComponent_div_0_Template, 16, 14, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, AngularFileUploaderComponent_div_1_Template, 10, 6, \"div\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme !== \"attachPin\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.theme == \"attachPin\");\n    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc2.NgClass, ɵngcc2.NgStyle], styles: [\".constraints-info[_ngcontent-%COMP%]{font-style:italic;margin-top:10px}.padMarg[_ngcontent-%COMP%]{margin-bottom:0;padding:0}.caption[_ngcontent-%COMP%]{margin-right:5px}.textOverflow[_ngcontent-%COMP%]{overflow:hidden;padding-right:0;text-overflow:ellipsis;white-space:nowrap}.up_btn[_ngcontent-%COMP%]{background-color:transparent;border:2px solid #5c5b5b;border-radius:22px;color:#000}.delFileIcon[_ngcontent-%COMP%]{color:#ce0909;text-decoration:none}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%]{border:2px dashed #5c5b5b;display:border-box;height:6rem;width:20rem}.dragNDrop[_ngcontent-%COMP%]   .div1[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{color:#5c5b5b;font-weight:700;margin-top:1.4em;text-align:center}.dragNDropBtmPad[_ngcontent-%COMP%]{padding-bottom:2rem}@media screen and (max-width:620px){.caption[_ngcontent-%COMP%]{padding:0}}@media screen and (max-width:510px){.sizeC[_ngcontent-%COMP%]{width:25%}}@media screen and (max-width:260px){.caption[_ngcontent-%COMP%], .sizeC[_ngcontent-%COMP%]{font-size:10px}}.resetBtn[_ngcontent-%COMP%]{margin-left:3px}\"] });\r\nAngularFileUploaderComponent.ctorParameters = () => [\r\n    { type: HttpClient, decorators: [{ type: SkipSelf }] }\r\n];\r\nAngularFileUploaderComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    resetUpload: [{ type: Input }],\r\n    ApiResponse: [{ type: Output }],\r\n    everythingDone: [{ type: Output }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFileUploaderComponent, [{\n        type: Component,\n        args: [{\n                selector: 'angular-file-uploader',\n                template: \"<div class=\\\"container\\\" *ngIf=\\\"(theme !== 'attachPin')\\\" id=\\\"default\\\">\\r\\n\\r\\n  <!-- Drag n Drop theme Starts -->\\r\\n  <div *ngIf=\\\"theme == 'dragNDrop'\\\" id=\\\"dragNDrop\\\"\\r\\n    [ngClass]=\\\"(hideSelectBtn && hideResetBtn) ? null : 'dragNDropBtmPad'\\\" class=\\\"dragNDrop\\\">\\r\\n    <div style=\\\"position:relative;\\\">\\r\\n      <div id=\\\"div1\\\" class=\\\"div1 afu-dragndrop-box\\\" (drop)=\\\"drop($event)\\\" (dragover)=\\\"allowDrop($event)\\\">\\r\\n        <p class=\\\"afu-dragndrop-text\\\">{{replaceTexts?.dragNDropBox}}</p>\\r\\n      </div>\\r\\n      <!-- <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{allowedFiles[0]?.name}}</span> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Drag n Drop theme Ends -->\\r\\n  <label for=\\\"sel{{id}}\\\" class=\\\"btn btn-primary btn-sm afu-select-btn\\\"\\r\\n    *ngIf=\\\"!hideSelectBtn\\\">{{replaceTexts?.selectFileBtn}}</label>\\r\\n  <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" style=\\\"display: none\\\" *ngIf=\\\"!hideSelectBtn\\\" (change)=\\\"onChange($event)\\\"\\r\\n    title=\\\"Select file\\\" name=\\\"files[]\\\" [accept]=formatsAllowed [attr.multiple]=\\\"multiple ? '' : null\\\" />\\r\\n  <button class=\\\"btn btn-info btn-sm resetBtn afu-reset-btn\\\" (click)=\\\"resetFileUpload()\\\"\\r\\n    *ngIf=\\\"!hideResetBtn\\\">{{replaceTexts?.resetBtn}}</button>\\r\\n  <br *ngIf=\\\"!hideSelectBtn\\\">\\r\\n  <p class=\\\"constraints-info afu-constraints-info\\\">({{formatsAllowed}}) {{replaceTexts?.sizeLimit}}: {{(convertSize(maxSize))}}\\r\\n  </p>\\r\\n  <!--Allowed file list-->\\r\\n  <div class=\\\"row afu-valid-file\\\" *ngFor=\\\"let sf of allowedFiles;let i=index\\\">\\r\\n    <p class=\\\"col-xs-3 textOverflow\\\"><span class=\\\"text-primary\\\">{{sf.name}}</span></p>\\r\\n    <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{convertSize(sf.size)}})</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\\r\\n    <!--  <input class=\\\"col-xs-3 progress caption\\\"  type=\\\"text\\\"  placeholder=\\\"Caption..\\\"  [(ngModel)]=\\\"Caption[i]\\\"  *ngIf=\\\"!uploadStarted\\\"/> -->\\r\\n    <div class=\\\"progress col-xs-3 padMarg afu-progress-bar\\\" *ngIf=\\\"isAllowedFileSingle && progressBarShow && !hideProgressBar\\\">\\r\\n      <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\"\\r\\n        [ngStyle]=\\\"{'width':uploadPercent+'%'}\\\">{{uploadPercent}}%</span>\\r\\n    </div>\\r\\n    <a class=\\\"col-xs-1\\\" role=\\\"button\\\" (click)=\\\"removeFile(i,'sf')\\\" *ngIf=\\\"!uploadStarted\\\"><i class=\\\"fa fa-times\\\"></i></a>\\r\\n  </div>\\r\\n  <!--Not Allowed file list-->\\r\\n  <div class=\\\"row text-danger afu-invalid-file\\\" *ngFor=\\\"let na of notAllowedFiles;let j=index\\\">\\r\\n    <p class=\\\"col-xs-3 textOverflow\\\"><span>{{na['fileName']}}</span></p>\\r\\n    <p class=\\\"col-xs-3 padMarg sizeC\\\"><strong>({{na['fileSize']}})</strong></p>\\r\\n    <p class=\\\"col-xs-3 \\\">{{na['errorMsg']}}</p>\\r\\n    <a class=\\\"col-xs-1 delFileIcon\\\" role=\\\"button\\\" (click)=\\\"removeFile(j,'na')\\\" *ngIf=\\\"!uploadStarted\\\">&nbsp;<i\\r\\n        class=\\\"fa fa-times\\\"></i></a>\\r\\n  </div>\\r\\n\\r\\n  <p *ngIf=\\\"uploadMsg\\\" class=\\\"{{uploadMsgClass}} + afu-upload-status\\\">{{uploadMsgText}}<p>\\r\\n      <div *ngIf=\\\"!isAllowedFileSingle && progressBarShow && !hideProgressBar\\\">\\r\\n        <div class=\\\"progress col-xs-4 padMarg afu-progress-bar\\\">\\r\\n          <span class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\"\\r\\n            [ngStyle]=\\\"{'width':uploadPercent+'%'}\\\">{{uploadPercent}}%</span>\\r\\n        </div>\\r\\n        <br>\\r\\n        <br>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-success afu-upload-btn\\\" type=\\\"button\\\" (click)=\\\"uploadFiles()\\\"\\r\\n        [disabled]=!enableUploadBtn>{{replaceTexts?.uploadBtn}}</button>\\r\\n      <br>\\r\\n</div>\\r\\n\\r\\n<!--/////////////////////////// ATTACH PIN THEME  //////////////////////////////////////////////////////////-->\\r\\n<div *ngIf=\\\"theme == 'attachPin'\\\" id=\\\"attachPin\\\">\\r\\n  <div style=\\\"position:relative;padding-left:6px\\\">\\r\\n    <a class='btn up_btn afu-attach-pin' (click)=\\\"attachpinOnclick()\\\">\\r\\n      {{replaceTexts?.attachPinBtn}}\\r\\n      <i class=\\\"fa fa-paperclip\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      <!-- <p style=\\\"margin-top:10px\\\">({{formatsAllowed}}) Size limit- {{(convertSize(maxSize))}}</p> -->\\r\\n      <input type=\\\"file\\\" id=\\\"sel{{id}}\\\" (change)=\\\"onChange($event)\\\" style=\\\"display: none\\\" title=\\\"Select file\\\"\\r\\n        name=\\\"files[]\\\" [accept]=formatsAllowed [attr.multiple]=\\\"multiple ? '' : null\\\" />\\r\\n      <br>\\r\\n    </a>\\r\\n    &nbsp;\\r\\n    <span class='label label-info' id=\\\"upload-file-info{{id}}\\\">{{allowedFiles[0]?.name}}</span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\",\n                styles: [\".constraints-info{font-style:italic;margin-top:10px}.padMarg{margin-bottom:0;padding:0}.caption{margin-right:5px}.textOverflow{overflow:hidden;padding-right:0;text-overflow:ellipsis;white-space:nowrap}.up_btn{background-color:transparent;border:2px solid #5c5b5b;border-radius:22px;color:#000}.delFileIcon{color:#ce0909;text-decoration:none}.dragNDrop .div1{border:2px dashed #5c5b5b;display:border-box;height:6rem;width:20rem}.dragNDrop .div1>p{color:#5c5b5b;font-weight:700;margin-top:1.4em;text-align:center}.dragNDropBtmPad{padding-bottom:2rem}@media screen and (max-width:620px){.caption{padding:0}}@media screen and (max-width:510px){.sizeC{width:25%}}@media screen and (max-width:260px){.caption,.sizeC{font-size:10px}}.resetBtn{margin-left:3px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: SkipSelf\n            }] }]; }, { resetUpload: [{\n            type: Input\n        }], ApiResponse: [{\n            type: Output\n        }], everythingDone: [{\n            type: Output\n        }], config: [{\n            type: Input\n        }] }); })();\n\nclass AngularFileUploaderModule {\r\n}\nAngularFileUploaderModule.ɵfac = function AngularFileUploaderModule_Factory(t) { return new (t || AngularFileUploaderModule)(); };\nAngularFileUploaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AngularFileUploaderModule });\nAngularFileUploaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            HttpClientModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularFileUploaderModule, { declarations: function () { return [AngularFileUploaderComponent]; }, imports: function () { return [CommonModule,\n        HttpClientModule]; }, exports: function () { return [AngularFileUploaderComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AngularFileUploaderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    HttpClientModule,\n                ],\n                declarations: [AngularFileUploaderComponent],\n                exports: [AngularFileUploaderComponent]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of angular-file-uploader\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AngularFileUploaderComponent, AngularFileUploaderModule };\n\n//# sourceMappingURL=angular-file-uploader.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, RoutesRecognized } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { FileUploadComponent } from './file-upload.component';\nimport { FileUploadRoutingModule } from './file-upload-routing.module';\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    FileUploadComponent\n  ],\n  imports: [\n    CommonModule,\n    FileUploadRoutingModule,\n    AngularFileUploaderModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    ReactiveFormsModule\n\n    //BrowserModule,\n    //HttpClientModule\n    //SharedModule,\n    //RouterModule.forChild(routes),\n\n  ],\n  exports: [\n    FileUploadComponent,\n    AngularFileUploaderModule\n  ]\n\n})\nexport class FileUploadModule{\n  //public static routes = routes;\n }\n"],"sourceRoot":"webpack:///"}