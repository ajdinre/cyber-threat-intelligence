{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/no-content/no-content.component.ts","./src/app/no-content/no-content.component.html","./src/app/app-routing.module.ts","./src/app/uploaded-files/uploaded-files.component.ts","./src/app/uploaded-files/uploaded-files.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://CTI-url'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component,ViewChild, OnInit, Inject, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterViewInit{\n  title = 'Cyber Threat Intelligence';\n  public showMenu = false;\n  public toggleSelected = true;\n  constructor(private router: Router) {\n  }\n\n\n  ngOnInit(){\n  }\n\n  ngAfterViewInit(){\n    setTimeout(() => {\n      this.showMenu = window.innerWidth > 700 ? true : false;\n      this.toggleSelected = this.showMenu;\n    }, 0);\n  }\n  onResize(event){\n    this.showMenu = event.target.innerwidth > 700 ? true : false;\n    this.toggleSelected = this.showMenu;\n  }\n  toggle(){\n    this.toggleSelected = !this.toggleSelected;\n  }\n}\n","<div (window:resize)=\"onResize($event)\">\n\n  <mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav mode=\"side\"\n    #drawer\n    clas=\"sidenav\"\n    fixedInViewport=\"true\">\n    <mat-toolbar color=\"primary\">CTI</mat-toolbar>\n    <mat-nav-list>\n\n      <a mat-list-item routerLink=\"/home\" routerLinkActive=\"active\"> Home </a>\n      <a mat-list-item routerLink=\"/analyse\" routerLinkActive=\"active\"> Analyse </a>\n      <a mat-list-item routerLink=\"/file-upload\" routerLinkActive=\"active\"> File Upload </a>\n      <a mat-list-item routerLink=\"/uploaded-files\" routerLinkActive=\"active\"> Uploaded Files </a>\n\n    </mat-nav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content class=\"sidenav-content\">\n    <mat-toolbar color=\"primary\">\n      <button type=\"button\" aria-label=\"Toggle sidenav\"\n      mat-icon-button (click)=\"drawer.toggle()\">\n      <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n\n      <span center=\"center\" routerLink=\"/analyse\" routerLinkActive=\"active\">ANALYSE</span>\n    </mat-toolbar>\n      <router-outlet></router-outlet>\n    </mat-sidenav-content>\n\n  </mat-sidenav-container>\n\n\n\n</div>\n","//predefined modules and components\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Router, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n//angular materials modules\nimport { MatButtonModule } from  '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\n\n//my componentns\nimport { NoContentComponent } from './no-content/no-content.component';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SharedComponent } from './shared/shared.component';\n\n//my modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { routes } from './app-routing.module'\nimport { SharedModule } from './shared/shared.module';\nimport { UploadedFilesComponent } from './uploaded-files/uploaded-files.component';\nimport { FileUploadModule } from './file-upload/file-upload.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NoContentComponent,\n    UploadedFilesComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    //FileUploadModule,\n    AppRoutingModule\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-content',\n  templateUrl: './no-content.component.html',\n  styleUrls: ['./no-content.component.css']\n})\nexport class NoContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1> NO CONTENT COMPONENT, SOMETHING WENT WRONG</h1>\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AnalyseComponent } from './analyse/analyse.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { HomeComponent } from './home/home.component';\nimport { NoContentComponent } from './no-content/no-content.component';\nimport { UploadedFilesComponent } from './uploaded-files/uploaded-files.component';\n\n\nexport const routes: Routes =\n  [\n    {\n      path: 'uploaded-files',\n      loadChildren: () => import('./uploaded-files/uploaded-files.module').then(m=>m.UploadedFilesModule)\n    },\n    {\n      path: 'analyse',\n      loadChildren: () => import('./analyse/analyse.module').then(m=>m.AnalyseModule)\n\n    },\n    {\n      path: 'file-upload',\n      loadChildren: () => import('./file-upload/file-upload.module').then(m=>m.FileUploadModule)\n\n    },\n    {\n      path: 'home',\n      loadChildren: () => import('./home/home.module').then(m=>m.HomeModule)\n    },\n    {\n      path: '',\n      pathMatch: 'full',\n      redirectTo: 'home'\n    },\n    {\n      path: '**',\n      component: NoContentComponent\n    }\n  ];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-uploaded-files',\n  templateUrl: './uploaded-files.component.html',\n  styleUrls: ['./uploaded-files.component.css']\n})\nexport class UploadedFilesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>uploaded-files works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}